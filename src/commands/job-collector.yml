description: >
    "Collect data from every job and report to SumoLogic"
parameters:
    environment:
        default: ""
        description: Enter the environment name of the event.
        type: string
    team:
        default: ""
        description: Enter the team carrying out the event.
        type: string
    service:
        default: ""
        description: Enter the service carrying out the event.
        type: string
    job-collector:
        default: JOB_HTTP_SOURCE
        description: Enter the HTTP Source endpoint generated by the Sumologic setup wizard for Jobs.
        type: env_var_name
    circle-token:
        default: CIRCLE_TOKEN
        description: 'Enter your CircleCI Personal Access Token for interacting with the API. You may generate one here: https://circleci.com/account/api'
        type: env_var_name
    
steps:
    - jq/install
    - run:
        name: Job Collector
        command: |
            VCS_SHORT=$(echo $CIRCLE_BUILD_URL | cut -d"/" -f4)
            case $VCS_SHORT in
            gh)
                VCS=github
                ;;
            bb)
                VCS=bitbucket
                ;;
            *)
                echo "No VCS found. Error" && exit 1
                ;;
            esac
            JOB_DATA_RAW=$(curl -s "https://circleci.com/api/v1.1/project/$VCS/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM?circle-token=$<< parameters.circle-token >>")
            # removing steps and circle_yml keys from object
            JOB_DATA_RAW=$(echo $JOB_DATA_RAW | jq 'del(.circle_yml)' | jq 'del(.steps)')
            JOB_NAME=$(echo $JOB_DATA_RAW | jq .workflows | jq .job_name)
            JOB_STATUS=$(echo $JOB_DATA_RAW | jq .status)
            echo "JOB: $JOB_NAME"
            echo "JOB NUM: $CIRCLE_BUILD_NUM"
            echo "STATUS: $JOB_STATUS"
            #####
            # Send Job Data to SumoLogic
            #####
            mkdir -p /tmp/sumologic-logs/
            # manually set job name as it is currently null
            JOB_DATA_RAW=$(echo $JOB_DATA_RAW | jq --arg JOBNAME "$JOB_NAME" '.job_name = $JOBNAME')
            JOB_CUSTOM_DATA=$( jq -n \
                                --arg en "$ENV" \
                                --arg tm "$TEAM" \
                                --arg sv "$SERVICE" \
                                '{environment: $en, team: $tm, service: $sv}' )
            # Append any custom data to the job data
            if [ ! -z "$JOB_CUSTOM_DATA" ]
            then
                echo "Appending custom data to the job data"
                JOB_DATA_RAW=$(echo $JOB_DATA_RAW | jq -c ". +  {\"custom_data\": $JOB_CUSTOM_DATA}")
            else
                echo "No valid custom data found to append to the job data"
            fi
            echo $JOB_DATA_RAW > /tmp/sumologic-logs/job-collector.json
            curl -s -X POST -T /tmp/sumologic-logs/job-collector.json $<< parameters.job-collector >>
            echo $JOB_DATA_RAW
            echo "Job details sent to Sumo."
            
description: >
  "Add this job to any Workflow, it will run until the end of"
parameters:
  http-source:
    type: env_var_name
    default: "HTTP_SOURCE"
    description: "Enter the HTTP Source endpoint generated by the Sumologic setup wizard."
executor: default
steps:
  - jq/install
  - run:
      name: Workflow Collector
      command: |
        DATA_URL="https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/jobs?circle-token=$CIRCLE_TOKEN"
        WF_DATA=$(curl -s "$DATA_URL" | jq '.items')
        WF_LENGTH=$(echo "$WF_DATA" | jq length)
        # Assume the WF is currently running
        WF_FINISHED=false
        echo "Jobs in Workflow: $WF_LENGTH"
        echo
        if [ "$WF_LENGTH" -lt 2 ];
        # Exit if no other jobs in the Workflow.
        then
          echo "Only a single job has been found in the workflow, indicating this reporter is the only job in the pipeline."
          echo "Please add other jobs to the Workflow you wish to collect data on to send to Sumologic"
          exit 1
        fi
        # Check the status of all jobs in the workflow that are not this job and wait until they have all finished.
        ## START MAIN LOOP ##
        #####################
        while [ "$WF_FINISHED" = false ]
        do
          echo "Waiting for other jobs to finish..."
          # for each job in the workflow fetch the status.
          # the WF_FINISHED will be assumed true unless one of the jobs in the Workflow is still running
          # the flag will then be set back to false.
          WF_FINISHED=true
          i="0"
          ################
          ### JOB LOOP ###
          ################
          while [ $i -lt "$WF_LENGTH" ]
          do
            echo "looping: $i"
            # fetch the job info
            JOB_DATA=$(echo "$WF_DATA" | jq --arg i "$i" ".[$i]")
            JOB_NUMBER=$(echo "$JOB_DATA" | jq ".job_number")
            JOB_STATUS=$(echo "$JOB_DATA" | jq ".status")
            JOB_NAME=$(echo "$JOB_DATA" | jq ".name")
            # Only check the job if it is not this current job
            if [ "$JOB_NUMBER" = "$CIRCLE_BUILD_NUM" ];
            then
              echo "This is the reporter job. Skipping"
            else
              # If this job is NOT the current job, check the status
              echo "JOB: $JOB_NAME"
              echo "JOB NUM: $JOB_NUMBER"
              echo "STATUS: $JOB_STATUS"
              if [ "$JOB_STATUS" != '"running"' ];
              then
                echo "Job $CIRCLE_JOB $JOB_NUMBER is complete - $JOB_STATUS"
              else
                # If it is still running, then mark WF_FINISHED as false.
                WF_FINISHED=false
                echo "Setting status of WF_FINISHED to false"
              fi
            fi
            echo "rerunning loop"
            i="$((i+1))"
            echo "increment loop to $i"
            echo " ---------- "
            echo
          done
          echo "Waiting 10 seconds"
          sleep 10
        done
        echo
        echo "Complete"


description: >
  "Add this job to any Workflow, it will run until the end of"
parameters:
  http-source:
      type: env_var_name
      default: "HTTP_SOURCE"
      description: "Enter the HTTP Source endpoint generated by the Sumologic setup wizard."
executor: default
steps:
  - jq/install
  - run:
      command: |
        DATA_URL="https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/jobs?circle-token=$CIRCLE_TOKEN"
        echo $(curl "$DATA_URL")
        WF_LENGTH=$(curl "$DATA_URL" | jq length)
        echo "Length: WF_LENGTH"
        if [ "$WF_LENGTH" -lt 2 ];
        # Exit if no other jobs in the Workflow.
        then
          echo "Only a single job has been found in the workflow, indicating this reporter is the only job in the pipeline."
          echo "Please add other jobs to the Workflow you wish to collect data on to send to Sumologic"
          exit 1
        fi
        WF_FINISHED=false
        # Check the status of all jobs in the workflow that are not this job and wait until they have all finished.
        while [ "$WF_FINISHED" = false ]
        do
          echo "Waiting for other jobs to finish..."
          # for each job in the workflow fetch the status.
          # the WF_FINISHED will be assumed true unless one of the jobs in the Workflow is still running
          # the flag will then be set back to false.
          WF_FINISHED=true
          i="0"
          while [ $i -lt "$WF_LENGTH" ]
          do
            echo "looping: $i"
            JOB_DATA=$(curl "$DATA_URL" | jq ".[][$i]")
            JOB_NUMBER=$(echo "$JOB_DATA" | jq ".job_number")
            JOB_STATUS=$(echo "$JOB_DATA" | jq ".status")
            echo "Job number: $JOB_NUMBER"
            # check Job number and set WF_FINISHED value
            # Only check the job if it is not this current job
            if [ ! "$JOB_NUMBER" = "$CIRCLE_BUILD_NUM" ];
            then
              echo "Checking the status of $JOB_NUMBER"
              echo "status $JOB_STATUS"
              # check if the job is complete.
              if [ ! "$JOB_STATUS" = "running" ];
              then
                echo "Job $CIRCLE_JOB $JOB_NUMBER is complete"
              fi
            fi
            i=$($i+1)
          done
        done
